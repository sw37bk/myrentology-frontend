import React, { useState } from 'react';
import { 
  Card, 
  Tabs, 
  Input, 
  Select, 
  Button, 
  Space,
  Row,
  Col,
  Modal,
  Form,
  message
} from 'antd';
import { 
  TeamOutlined, 
  BarChartOutlined, 
  CrownOutlined,
  PlusOutlined,
  SearchOutlined,
  FilterOutlined
} from '@ant-design/icons';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { crmApi } from '../services/crm';
import { CustomerStatsCards } from '../components/crm/CustomerStatsCards';
import { CustomersTable } from '../components/crm/CustomersTable';

const { Option } = Select;

interface Customer {
  id: number;
  name: string;
  phone: string;
  email?: string;
  source: 'avito' | 'website' | 'recommendation' | 'other';
  total_bookings: number;
  total_spent: number;
  loyalty_points: number;
  last_booking_date?: string;
  status: 'active' | 'inactive' | 'vip';
}

export const CRMPage: React.FC = () => {
  const [activeTab, setActiveTab] = useState('customers');
  const [filters, setFilters] = useState({ status: '', search: '' });
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [form] = Form.useForm();
  const queryClient = useQueryClient();

  const { data: stats, isLoading: statsLoading } = useQuery({
    queryKey: ['customer-stats'],
    queryFn: crmApi.getCustomerStats,
  });

  const { data: customers = [], isLoading: customersLoading } = useQuery({
    queryKey: ['customers', filters],
    queryFn: () => crmApi.getCustomers(filters),
  });

  const createCustomerMutation = useMutation({
    mutationFn: crmApi.createCustomer,
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['customers'] });
      queryClient.invalidateQueries({ queryKey: ['customer-stats'] });
      setIsModalOpen(false);
      form.resetFields();
      message.success('–ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    },
  });

  const handleCreateCustomer = (values: any) => {
    createCustomerMutation.mutate({
      ...values,
      tags: values.tags ? values.tags.split(',').map((t: string) => t.trim()) : [],
    });
  };

  return (
    <div>
      <Card>
        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 24 }}>
          <div>
            <h1 style={{ margin: 0, fontSize: '24px' }}>
              <TeamOutlined style={{ marginRight: 8 }} />
              CRM —Å–∏—Å—Ç–µ–º–∞ - –†–µ–Ω—Ç–æ–ª–æ–≥–∏—è
            </h1>
            <p style={{ margin: 0, color: '#666' }}>
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
            </p>
          </div>
          
          <Button 
            type="primary" 
            icon={<PlusOutlined />}
            size="large"
            onClick={() => setIsModalOpen(true)}
          >
            –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
          </Button>
        </div>

        <CustomerStatsCards stats={stats!} loading={statsLoading} />

        <Tabs 
          activeKey={activeTab} 
          onChange={setActiveTab}
          style={{ marginTop: 24 }}
          items={[
            {
              key: 'customers',
              label: (
                <span>
                  <TeamOutlined />
                  –í—Å–µ –∫–ª–∏–µ–Ω—Ç—ã
                </span>
              ),
              children: (
                <div>
                  <Card size="small" style={{ marginBottom: 16 }}>
                    <Row gutter={16} align="middle">
                      <Col span={8}>
                        <Input
                          placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ email..."
                          prefix={<SearchOutlined />}
                          value={filters.search}
                          onChange={(e) => setFilters(prev => ({ ...prev, search: e.target.value }))}
                        />
                      </Col>
                      <Col span={6}>
                        <Select
                          placeholder="–°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞"
                          style={{ width: '100%' }}
                          value={filters.status || undefined}
                          onChange={(value) => setFilters(prev => ({ ...prev, status: value }))}
                          allowClear
                        >
                          <Option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</Option>
                          <Option value="inactive">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ</Option>
                          <Option value="vip">VIP</Option>
                        </Select>
                      </Col>
                      <Col span={4}>
                        <Button 
                          icon={<FilterOutlined />}
                          onClick={() => setFilters({ status: '', search: '' })}
                        >
                          –°–±—Ä–æ—Å–∏—Ç—å
                        </Button>
                      </Col>
                    </Row>
                  </Card>

                  <CustomersTable 
                    customers={customers}
                    loading={customersLoading}
                  />
                </div>
              ),
            },
            {
              key: 'loyalty',
              label: (
                <span>
                  <CrownOutlined />
                  –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
                </span>
              ),
              children: (
                <Card title="–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏">
                  <Row gutter={16}>
                    <Col span={12}>
                      <Card title="–ü—Ä–∞–≤–∏–ª–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è" size="small">
                        <p>üíé 100 –±–∞–ª–ª–æ–≤ –∑–∞ –∫–∞–∂–¥—É—é –∞—Ä–µ–Ω–¥—É</p>
                        <p>üëë 500 –±–∞–ª–ª–æ–≤ –∑–∞ —Å—Ç–∞—Ç—É—Å VIP</p>
                        <p>üéÅ 1 –±–∞–ª–ª = 1 —Ä—É–±–ª—å —Å–∫–∏–¥–∫–∏</p>
                      </Card>
                    </Col>
                    <Col span={12}>
                      <Card title="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã" size="small">
                        <p>üìä –í—Å–µ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ –±–∞–ª–ª–æ–≤: 15,240</p>
                        <p>üí∞ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –±–∞–ª–ª–æ–≤: 8,750</p>
                        <p>üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã: {stats?.total_customers}</p>
                      </Card>
                    </Col>
                  </Row>
                </Card>
              ),
            },
            {
              key: 'analytics',
              label: (
                <span>
                  <BarChartOutlined />
                  –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
                </span>
              ),
              children: (
                <Card title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã">
                  <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º...</p>
                </Card>
              ),
            },
          ]}
        />
      </Card>

      <Modal
        title="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"
        open={isModalOpen}
        onCancel={() => {
          setIsModalOpen(false);
          form.resetFields();
        }}
        footer={null}
        width={600}
      >
        <Form
          form={form}
          layout="vertical"
          onFinish={handleCreateCustomer}
        >
          <Row gutter={16}>
            <Col span={12}>
              <Form.Item
                name="name"
                label="–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞"
                rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞' }]}
              >
                <Input placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤" />
              </Form.Item>
            </Col>
            <Col span={12}>
              <Form.Item
                name="phone"
                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω' }]}
              >
                <Input placeholder="+79991234567" />
              </Form.Item>
            </Col>
          </Row>

          <Form.Item
            name="email"
            label="Email"
          >
            <Input placeholder="client@example.com" />
          </Form.Item>

          <Row gutter={16}>
            <Col span={12}>
              <Form.Item
                name="source"
                label="–ò—Å—Ç–æ—á–Ω–∏–∫"
                initialValue="other"
              >
                <Select>
                  <Option value="avito">–ê–≤–∏—Ç–æ</Option>
                  <Option value="website">–°–∞–π—Ç</Option>
                  <Option value="recommendation">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</Option>
                  <Option value="other">–î—Ä—É–≥–æ–µ</Option>
                </Select>
              </Form.Item>
            </Col>
            <Col span={12}>
              <Form.Item
                name="status"
                label="–°—Ç–∞—Ç—É—Å"
                initialValue="active"
              >
                <Select>
                  <Option value="active">–ê–∫—Ç–∏–≤–Ω—ã–π</Option>
                  <Option value="inactive">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π</Option>
                  <Option value="vip">VIP</Option>
                </Select>
              </Form.Item>
            </Col>
          </Row>

          <Form.Item
            name="notes"
            label="–ó–∞–º–µ—Ç–∫–∏"
          >
            <Input.TextArea rows={3} placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ..." />
          </Form.Item>

          <Form.Item>
            <Space>
              <Button 
                type="primary" 
                htmlType="submit"
                loading={createCustomerMutation.isPending}
              >
                –°–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
              </Button>
              <Button 
                onClick={() => {
                  setIsModalOpen(false);
                  form.resetFields();
                }}
              >
                –û—Ç–º–µ–Ω–∞
              </Button>
            </Space>
          </Form.Item>
        </Form>
      </Modal>
    </div>
  );
};