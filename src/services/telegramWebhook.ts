const BOT_TOKEN = '7525839831:AAFQIY1dUran8yIfx3SS1C4dKNt4sshOmu0';
const TELEGRAM_API = `https://api.telegram.org/bot${BOT_TOKEN}`;

export const telegramWebhook = {
  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
  setWebhook: async (url: string) => {
    try {
      const response = await fetch(`${TELEGRAM_API}/setWebhook`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ url })
      });
      return await response.json();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', error);
      return null;
    }
  },

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  handleUpdate: async (update: any) => {
    const message = update.message;
    if (!message) return;

    const chatId = message.chat.id;
    const text = message.text;
    const user = message.from;

    // –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    if (text === '/start') {
      await sendMessage(chatId, 
        'üöó –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†–µ–Ω—Ç–æ–ª–æ–≥–∏—é!\n\n' +
        '–ó–¥–µ—Å—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö.\n\n' +
        '–ö–æ–º–∞–Ω–¥—ã:\n' +
        '/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n' +
        '/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è\n' +
        '/status - –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏'
      );
    }
    
    if (text === '/subscribe') {
      // –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await sendMessage(chatId, '‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!');
    }
    
    if (text === '/unsubscribe') {
      await sendMessage(chatId, '‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    }
    
    if (text === '/status') {
      await sendMessage(chatId, 'üìä –°—Ç–∞—Ç—É—Å: –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
    }
  }
};

const sendMessage = async (chatId: number, text: string) => {
  try {
    await fetch(`${TELEGRAM_API}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text,
        parse_mode: 'HTML'
      })
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
  }
};